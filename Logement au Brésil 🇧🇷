vous travaillerez sur un ensemble de donn√©es de maisons √† vendre au Br√©sil. Votre objectif est de d√©terminer s'il existe des diff√©rences r√©gionales sur le march√© immobilier. Vous √©tudierez √©galement le sud du Br√©sil pour d√©terminer s'il existe une relation entre la taille et le prix des maisons, similaire √† ce que vous avez observ√© pour l'immobilier dans certains √âtats du Mexique.
# # Import Matplotlib, pandas, and plotly
import pandas as pd 
import matplotlib.pyplot as plt 
import plotly.express as px 

#Pr√©parer les donn√©es 
T√¢che 1.5.1 : Importer le fichier CSV data/brasil-real-estate-1.csvdans le DataFrame df1.
df1 =pd.read_csv("data/brasil-real-estate-1.csv")
df1.head()

#Avant de passer √† la t√¢che suivante, prenez un moment pour inspecter df1les donn√©es √† l'aide des infom√©thodes et head. Quels probl√®mes constatez-vous dans les donn√©es ? Quel nettoyage devrez-vous effectuer avant de pouvoir effectuer votre analyse ?
df.info()
# resultats 
0 property_type 12834 objet non nul
 1 place_with_parent_names 12834 objet non nul
 2 r√©gion 12834 objet non nul
 3 lat-lon 11551 objet non nul
 4 area_m2 12834 non nul float64
 5 prix_usd 12834 objet non nul
dtypes : float64(1), objet(5)
utilisation de la m√©moire : 601,7 Ko et plus

# T√¢che 1.5.2 : supprimer toutes les lignes contenant NaNdes valeurs du DataFrame df1.
df1.dropna(inplace=True) 
#T√¢che 1.5.3 : Utilisez la "lat-lon"colonne pour cr√©er deux colonnes distinctes dansdf1 : "lat"et "lon". Assurez-vous que le type de donn√©es de ces nouvelles colonnes est float.
# T√¢che 1.5.4 : Utilisez la "place_with_parent_names"colonne pour cr√©er une "state"colonne pour df1. (Notez que le nom de l'√©tat appara√Æt toujours apr√®s "|Brasil|"dans chaque cha√Æne.)
df1["state"]=df1["place_with_parent_names"].str.split("|",expand=True)[2]
df1[["lat" , "lon"]]=df1["lat-lon"].str.split(",", expand=True).astype(float)
# T√¢che 1.5.5 : Transformez la "price_usd"colonne de df1 sorte que toutes les valeurs soient des nombres √† virgule flottante au lieu de cha√Ænes.
df1["price_usd"]=df1["price_usd"].str.replace("$","",regex=False).str.replace(",","").astype(float)
# T√¢che 1.5.6 : Supprimez les colonnes "lat-lon"et de ."place_with_parent_names"df1
df1.drop(columns=["lat-lon","place_with_parent_names"],inplace=True)
#T√¢che 1.5.7 : Importer le fichier CSV brasil-real-estate-2.csvdans le DataFrame df2.
df2 = pd.read_csv("data/brasil-real-estate-2.csv")
df2.head() 
df2.info()
# Resultats 
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 12833 entries, 0 to 12832
Data columns (total 7 columns):
 #   Column         Non-Null Count  Dtype  
---  ------         --------------  -----  
 0   property_type  12833 non-null  object 
 1   state          12833 non-null  object 
 2   region         12833 non-null  object 
 3   lat            12833 non-null  float64
 4   lon            12833 non-null  float64
 5   area_m2        11293 non-null  float64
 6   price_brl      12833 non-null  float64
dtypes: float64(4), object(3)

# T√¢che 1.5.8 : Utilisez la "price_brl"colonne pour cr√©er une nouvelle colonne nomm√©e "price_usd". (Gardez √† l'esprit que, lorsque ces donn√©es ont √©t√© collect√©es en 2015 et 2016, un dollar am√©ricain co√ªtait 3,19 r√©aux br√©siliens.)
df2["price_usd"]=df2["price_brl"] /3.19
#T√¢che 1.5.9 : Supprimez la "price_brl"colonne de df2, ainsi que toutes les lignes contenant NaNdes valeurs.
df2.dropna(inplace=True)
df2.drop(columns=["price_brl"],inplace=True)
# T√¢che 1.5.10 : Concat√©ner df1et df2cr√©er un nouveau DataFrame nomm√© df.
df = pd.concat([df1 , df2])
print("df shape:", df.shape)
forme df : (22844, 7)
# Explorer 
Il est temps d'explorer vos donn√©es. Dans cette section, vous utiliserez vos nouvelles comp√©tences en visualisation de donn√©es pour en savoir plus sur les diff√©rences r√©gionales du march√© immobilier br√©silien.

Compl√©tez le code ci-dessous pour cr√©er un scatter_mapboxaffichant l'emplacement des propri√©t√©s dans df.
fig = px.scatter_mapbox(
    df,
    lat="lat",
    lon="lon",
    center={"lat": -14.2, "lon": -51.9},  # Map will be centered on Brazil
    width=600,
    height=600,
    hover_data=["price_usd"],  # Display price when hovering mouse over house
)

fig.update_layout(mapbox_style="open-street-map")

fig.show()
#T√¢che 1.5.11 : utilisez la describe m√©thode pour cr√©er un DataFrame summary_stats avec les statistiques r√©capitulatives pour les colonnes "area_m2"et ."price_usd"
summary_stats = df[["area_m2","price_usd"]].describe()
summary_stats
# T√¢che 1.5.12 : Cr√©ez un histogramme de "price_usd". Assurez-vous que l'axe des x a l'√©tiquette "Price [USD]", l'axe des y a l'√©tiquette "Frequency"et le trac√© a le titre "Distribution of Home Prices". Utilisez Matplotlib( plt).
# Build histogram
plt.hist(df["price_usd"])


# Label axes
plt.xlabel("Price [USD]")
plt.ylabel("Frequency")
# Add title
plt.title("Distribution of Home Prices")

# Don't change the code below üëá
plt.savefig("images/1-5-12.png", dpi=150)

# T√¢che 1.5.13 : Cr√©er un diagramme en bo√Æte horizontal de "area_m2". S'assurer que l'axe des x porte l'√©tiquette "Area [sq meters]"et que le trac√© porte le titre "Distribution of Home Sizes". Utiliser Matplotlib( plt).
# Build box plot
plt.boxplot(df["area_m2"],vert=False)

 
# Label x-axis
plt.xlabel("Area [sq meters]")

# Add title
plt.title("Distribution of Home Sizes")
# Don't change the code below üëá
plt.savefig("images/1-5-13.png", dpi=150)

# T√¢che 1.5.14 : Utilisez la groupbym√©thode pour cr√©er une s√©rie nomm√©e mean_price_by_regionqui montre le prix moyen des maisons dans chaque r√©gion du Br√©sil, tri√© du plus petit au plus grand.
mean_price_by_region=df.groupby("region")["price_usd"].mean().sort_values(ascending=True)
mean_price_by_region

# T√¢che 1.5.15 : Utiliser mean_price_by_regionpour cr√©er un graphique √† barres. Assurez-vous d'√©tiqueter l'axe des abscisses comme ¬´ x ¬ª "Region"et l'axe des ordonn√©es comme ¬´ y ¬ª "Mean Price [USD]", et de donner au graphique le titre ¬´ ¬ª "Mean Home Price by Region". Utilisez pandas.
# Build bar chart, label axes, add title
mean_price_by_region.plot(
    kind="bar",
    xlabel="state",
    ylabel="Mean Price [USD]",
    title="Mean Home Price by Region"
);

# Don't change the code below üëá
plt.savefig("images/1-5-15.png", dpi=150)

# T√¢che 1.5.16 : Cr√©er un DataFrame df_southcontenant toutes les maisons dfsitu√©es dans la "South"r√©gion.
df_south =df[ df["region"]=="South" ]
df_south.head()
# T√¢che 1.5.17 : Utilisez la value_countsm√©thode pour cr√©er une s√©rie homes_by_statecontenant le nombre de propri√©t√©s dans chaque √©tat dans df_south.
homes_by_state = df_south["state"].value_counts()
homes_by_state

# T√¢che 1.5.18 : Cr√©ez un nuage de points illustrant le prix par rapport √† la superficie de l'√âtat df_southcomptant le plus grand nombre de propri√©t√©s. Assurez-vous d'√©tiqueter les axes des x "Area [sq meters]"et des y "Price [USD]"et d'utiliser le titre "<name of state>: Price vs. Area". Utilisez Matplotlib( plt).
# Subset data
df_south_rgs = df_south[df_south["state"]=="Rio Grande do Sul"] 

# Build scatter plot
plt.scatter(x=df_south_rgs["area_m2"] , y=df_south_rgs["price_usd"])


# Label axes
plt.xlabel("Area [sq meters]")
plt.ylabel("Price [USD]")

# Add title
plt.title("Rio Grande do Sul: Price vs. Area")

# Don't change the code below üëá
plt.savefig("images/1-5-18.png", dpi=150)

# T√¢che 1.5.19 : Cr√©er un dictionnaire south_states_corr, o√π les cl√©s sont les noms des trois √âtats de la "South"r√©gion du Br√©sil, et leurs valeurs associ√©es sont le coefficient de corr√©lation entre "area_m2"et "price_usd"dans cet √âtat.
df_south_rgs1 = df_south[df_south["state"]=="Paran√°"]
df_south_rgs2 = df_south[df_south["state"]=="Santa Catarina"]
south_states_corr= {
    'Paran√°':df_south_rgs1["area_m2"].corr(df_south_rgs1["price_usd"]),
    'Santa Catarina':df_south_rgs2["area_m2"].corr(df_south_rgs2["price_usd"]),
    'Rio Grande do Sul':df_south_rgs["area_m2"].corr(df_south_rgs["price_usd"]),
}
south_states_corr

# Conclusion 
l'objectif de cette √©tude est : d'etudier pour voir si il existe une relation entre le prix d'une maison et la surface 

Analyse : 
Globalement, plus la surface augmente, plus le prix tend √† augmenter, mais cette relation n‚Äôest pas lin√©aire ni tr√®s forte.

Il y a beaucoup de dispersion verticale, surtout entre 75 m¬≤ et 150 m¬≤ : cela signifie que des biens de m√™me taille peuvent co√ªter tr√®s diff√©remment selon d‚Äôautres crit√®res (quartier, √©tat du bien, nombre de pi√®ces, etc.).
Conclusion : 
Oui, il existe une relation entre la surface et le prix, mais elle n‚Äôest pas tr√®s forte.

 D'autres facteurs jouent un r√¥le crucial dans la formation du prix.
